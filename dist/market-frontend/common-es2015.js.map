{"version":3,"sources":["./src/app/service/author/author.service.ts","./src/app/service/publishing-company/publishing-company.service.ts","./src/app/service/upload/upload.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllAuthor(): Observable<any[]> {\r\n    return this.http.get<any[]>(API_URL + '/authors');\r\n  }\r\n\r\n  createAuthor(author: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/authors', author);\r\n  }\r\n\r\n  getAuthor(id: number): Observable<any> {\r\n    return this.http.get<any>(API_URL + `/authors/${id}`);\r\n  }\r\n\r\n  updateAuthor(id: number, author: any): Observable<any> {\r\n    return this.http.put<any>(API_URL + `/authors/${id}`, author);\r\n  }\r\n\r\n  deleteAuthor(id: number): Observable<any> {\r\n    return this.http.delete<any>(API_URL + `/authors/${id}`);\r\n  }\r\n\r\n  deleteListAuthor(id: number[]): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/authors/deleteList', id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {PublishingCompany} from '../../model/publishing-company';\r\n\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublishingCompanyService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllPublishingCompany(): Observable<PublishingCompany[]> {\r\n    return this.http.get<PublishingCompany[]>(API_URL + '/publishing-companies');\r\n  }\r\n\r\n  createPublishingCompany(publishingCompany: PublishingCompany): Observable<PublishingCompany> {\r\n    return this.http.post<PublishingCompany>(API_URL + '/publishing-companies', publishingCompany);\r\n  }\r\n\r\n  getPublishingCompany(id: number): Observable<PublishingCompany> {\r\n    return this.http.get<PublishingCompany>(API_URL + `/publishing-companies/${id}`);\r\n  }\r\n\r\n  updatePublishingCompany(id: number, publishingCompany: PublishingCompany): Observable<PublishingCompany> {\r\n    return this.http.put<PublishingCompany>(API_URL + `/publishing-companies/${id}`, publishingCompany);\r\n  }\r\n\r\n  deletePublishingCompany(id: number): Observable<PublishingCompany> {\r\n    return this.http.delete<PublishingCompany>(API_URL + `/publishing-companies/${id}`);\r\n  }\r\n\r\n  deleteListPublishingCompany(id: number[]): Observable<PublishingCompany> {\r\n    return this.http.post<PublishingCompany>(API_URL + '/publishing-companies/deleteList', id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nconst API_URL = `${environment.apiUrl}`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  uploadBasic(file: FormData): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/upload', file);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}